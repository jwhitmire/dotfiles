#!/bin/bash

set -e

tunnels=(
    'localhost' '127.0.0.1' 2022 2022
    'gitlab' '127.0.100.30' 80 80
    'tacobot' '127.0.100.40' 80 4848
    'sks' '127.0.100.15' 11371 11371
)

export SUDO_PROMPT='Your workstation password: '
dest="tunnel@173.247.96.8"

function create_interface()
{
    ifconfig | grep -q $1 || echo "[+] Creating virtual interface:  $1" && sudo ifconfig lo0 alias $1
}

function rip_down_current_tunnels()
{
    echo -n "[-] Ripping down existing tunnels to $dest"
    for i in `ps auxwww | grep ssh | grep $dest | egrep -- "-L|-R" | grep -v grep | awk '{print $2}'`
    do
        sudo kill $i
    done
    echo ''
}

function prepare()
{
    tmp_hosts=/tmp/.hosts
    cp /etc/hosts $tmp_hosts

    for (( i=0; i<${#tunnels[@]}; i=i+4))
    do
        host=${tunnels[$i]}
        ip=${tunnels[$((i+1))]}

        create_interface $ip
        egrep -v "$host|$ip" $tmp_hosts > /tmp/x
        echo "$ip $host" >> /tmp/x
        mv /tmp/x $tmp_hosts
    done

    if diff /etc/hosts /tmp/.hosts >/dev/null ; then
        rm $tmp_hosts
    else
        sudo cp /etc/hosts /etc/hosts.old
        sudo mv $tmp_hosts /etc/hosts
        echo "Your /etc/hosts file was updated (original backed up to /etc/hosts.old)"
    fi
}

function reestablish_tunnels()
{
    # this will allow an interactive passphrase prompt, if necessary
    ssh $dest echo || true

    cmd="ssh -f -N -o TCPKeepAlive=yes -o ServerAliveInterval=30"

    for (( i=0; i<${#tunnels[@]}; i=i+4))
    do
        host=${tunnels[$i]}
        ip=${tunnels[$((i+1))]}
        lport=${tunnels[$((i+2))]}
        rport=${tunnels[$((i+3))]}

        echo "[+] $host:$lport"
        cmd="$cmd -L $ip:$lport:localhost:$rport"
#        echo "    => $args"
    done


    cmd="$cmd $dest"

    sudo $cmd
}

prepare
rip_down_current_tunnels
reestablish_tunnels

